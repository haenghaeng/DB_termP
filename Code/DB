import psycopg2

# PostgreSQL 데이터베이스에 연결
def connect_db():
    return psycopg2.connect(
        dbname="sample2023",  # 데이터베이스 이름
        user="db2023",        # 사용자 이름
        password="db!2023",   # 비밀번호
        host="::1",           # 호스트 주소 (여기서는 IPv6의 localhost)
        port="5432"           # 포트 번호 (기본값 5432)
    )

# 테이블 생성 함수 정의
def create_tables(cursor):
    # 개인정보 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS PersonalInformation (
                      soldier_id SERIAL PRIMARY KEY,  -- 병사 ID (자동 증가)
                      name TEXT NOT NULL UNIQUE,      -- 이름 (고유값)
                      address TEXT,                   -- 주소
                      family_relationship TEXT,       -- 가족 관계
                      birthdate DATE,                 -- 생년월일
                      role TEXT,                      -- 역할 추가
                      admin_id INTEGER                -- 관리자 ID
                      )''')

    # 운영통제실 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS AdminSoldier (
                      admin_id SERIAL PRIMARY KEY,    -- 관리자 ID (자동 증가)
                      name TEXT NOT NULL,             -- 이름
                      rank TEXT NOT NULL,             -- 계급
                      responsibility TEXT,            -- 책임
                      contact TEXT,                   -- 연락처
                      FOREIGN KEY (admin_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 유선반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS FieldWiremanSoldier (
                      field_wireman_id SERIAL PRIMARY KEY,  -- 유선반 ID (자동 증가)
                      name TEXT NOT NULL,                   -- 이름
                      rank TEXT NOT NULL,                   -- 계급
                      assigned_region TEXT,                 -- 배정 지역
                      phone_extension TEXT,                 -- 전화 내선
                      FOREIGN KEY (field_wireman_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 무선장비 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS WirelessEquipment (
                      equipment_id SERIAL PRIMARY KEY,  -- 장비 ID (자동 증가)
                      type TEXT NOT NULL,                -- 장비 유형
                      location TEXT,                     -- 장비 위치
                      operator_id INTEGER,               -- 운영자 ID
                      FOREIGN KEY (operator_id) REFERENCES PersonalInformation(soldier_id)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 무선반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS WirelessOperatorSoldier (
                      operator_id SERIAL PRIMARY KEY,    -- 운영자 ID (자동 증가)
                      name TEXT NOT NULL,                -- 이름
                      rank TEXT NOT NULL,                -- 계급
                      assigned_equipment_id INTEGER,     -- 배정된 장비 ID
                      contact TEXT,                      -- 연락처
                      FOREIGN KEY (operator_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (assigned_equipment_id) REFERENCES WirelessEquipment(equipment_id),  -- 외래키: WirelessEquipment 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 정보보호반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS CybersecuritySoldier (
                      cyber_security_soldier_id SERIAL PRIMARY KEY,  -- 정보보호반 병사 ID (자동 증가)
                      name TEXT NOT NULL,                           -- 이름
                      rank TEXT NOT NULL,                           -- 계급
                      specialty TEXT,                               -- 전문 분야
                      contact TEXT,                                 -- 연락처
                      FOREIGN KEY (cyber_security_soldier_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 전산장비반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS ComputerTechnician (
                      technician_id SERIAL PRIMARY KEY,  -- 전산장비반 ID (자동 증가)
                      name TEXT NOT NULL,                 -- 이름
                      rank TEXT NOT NULL,                 -- 계급
                      assigned_area TEXT NOT NULL,        -- 배정 지역
                      contact TEXT,                       -- 연락처
                      FOREIGN KEY (technician_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 전화번호 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS PhoneDirectory (
                      phone_id SERIAL PRIMARY KEY,     -- 전화번호 ID (자동 증가)
                      region TEXT NOT NULL,            -- 지역
                      phone_number TEXT NOT NULL,      -- 전화번호
                      field_wireman_id INTEGER,       -- 유선반 ID
                      FOREIGN KEY (field_wireman_id) REFERENCES FieldWiremanSoldier(field_wireman_id)  -- 외래키: FieldWiremanSoldier 테이블 참조
                      )''')

    # 정보보호 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS Cybersecurity (
                      user_id SERIAL PRIMARY KEY,               -- 사용자 ID (자동 증가)
                      username TEXT NOT NULL,                   -- 사용자 이름
                      password_hash TEXT NOT NULL,              -- 비밀번호 해시
                      cyber_security_soldier_id INTEGER,       -- 정보보호반 병사 ID
                      FOREIGN KEY (cyber_security_soldier_id) REFERENCES CybersecuritySoldier(cyber_security_soldier_id)  -- 외래키: CybersecuritySoldier 테이블 참조
                      )''')

    # 전산장비 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS ComputerManagement (
                      computer_id SERIAL PRIMARY KEY,          -- 컴퓨터 ID (자동 증가)
                      ip_address TEXT NOT NULL,                -- IP 주소
                      registered_by INTEGER,                   -- 등록자 ID
                      FOREIGN KEY (registered_by) REFERENCES ComputerTechnician(technician_id)  -- 외래키: ComputerTechnician 테이블 참조
                      )''')

    # 권한 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS Permissions (
                      role_id SERIAL PRIMARY KEY,          -- 역할 ID (자동 증가)
                      role_name TEXT NOT NULL,             -- 역할 이름
                      permissions TEXT,                    -- 권한
                      soldier_id INTEGER,                  -- 병사 ID
                      FOREIGN KEY (soldier_id) REFERENCES PersonalInformation(soldier_id)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 로그 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS ActivityLog (
                      log_id SERIAL PRIMARY KEY,            -- 로그 ID (자동 증가)
                      timestamp TIMESTAMPTZ NOT NULL,      -- 타임스탬프
                      soldier_id INTEGER,                   -- 병사 ID
                      action TEXT NOT NULL,                 -- 행동
                      details TEXT NOT NULL,                -- 세부 사항
                      FOREIGN KEY (soldier_id) REFERENCES PersonalInformation(soldier_id)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 장비 이력 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS EquipmentMaintenanceLog (
                      maintenance_id SERIAL PRIMARY KEY,   -- 유지보수 ID (자동 증가)
                      equipment_id INTEGER,                -- 장비 ID
                      operator_id INTEGER,                 -- 운영자 ID
                      maintenance_date DATE NOT NULL,      -- 유지보수 날짜
                      details TEXT NOT NULL,               -- 세부 사항
                      FOREIGN KEY (equipment_id) REFERENCES WirelessEquipment(equipment_id),  -- 외래키: WirelessEquipment 테이블 참조
                      FOREIGN KEY (operator_id) REFERENCES WirelessOperatorSoldier(operator_id)  -- 외래키: WirelessOperatorSoldier 테이블 참조
                      )''')

    # 접속 기록 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS AccessLog (
                      access_id SERIAL PRIMARY KEY,        -- 접속 ID (자동 증가)
                      user_id INTEGER,                     -- 사용자 ID
                      access_time TIMESTAMPTZ NOT NULL,   -- 접속 시간
                      computer_id INTEGER,                 -- 컴퓨터 ID
                      ip_address TEXT NOT NULL,            -- IP 주소
                      FOREIGN KEY (user_id) REFERENCES Cybersecurity(user_id),  -- 외래키: Cybersecurity 테이블 참조
                      FOREIGN KEY (computer_id) REFERENCES ComputerManagement(computer_id)  -- 외래키: ComputerManagement 테이블 참조
                      )''')
    
    # 훈련 일정 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS TrainingSchedule (
                      schedule_id SERIAL PRIMARY KEY,
                      soldier_id INTEGER,
                      training_date DATE NOT NULL,
                      training_details TEXT,
                      FOREIGN KEY (soldier_id) REFERENCES PersonalInformation(soldier_id)
                      )''')

# PersonalInformation 테이블에 role 칼럼 추가
#def add_role_column(cursor):
#    try:
#        cursor.execute('''ALTER TABLE PersonalInformation ADD COLUMN role TEXT''')
#        print("role 칼럼이 추가되었습니다.")
#    except Exception as e:
#        print(f"오류 발생: {e}")

# 메인 함수
def main():
    conn = connect_db()
    cursor = conn.cursor()
    
    # 테이블 생성
    create_tables(cursor)
    
    # role 칼럼 추가
    add_role_column(cursor)

    # 데이터베이스 연결 종료
    conn.commit()  # 변경사항 커밋
    cursor.close()
    conn.close()   # 연결 종료

if __name__ == "__main__":
    main()

