import psycopg2

# PostgreSQL 데이터베이스에 연결
conn = psycopg2.connect(
    dbname="sample2023",  # 데이터베이스 이름
    user="db2023",        # 사용자 이름
    password="db!2023",   # 비밀번호
    host="::1",           # 호스트 주소 (여기서는 IPv6의 localhost)
    port="5432"           # 포트 번호 (기본값 5432)
)
cursor = conn.cursor()  # 커서 생성: SQL 명령을 실행하기 위한 객체

# 테이블 생성 함수 정의
def create_tables():
    # 개인정보 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS PersonalInformation (
                      soldier_id SERIAL PRIMARY KEY,  -- 병사 ID (자동 증가)
                      name TEXT NOT NULL UNIQUE,      -- 이름 (고유값)
                      address TEXT,                   -- 주소
                      family_relationship TEXT,       -- 가족 관계
                      birthdate DATE,                 -- 생년월일
                      admin_id INTEGER                -- 관리자 ID
                      )''')

    # 운영통제실 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS AdminSoldier (
                      admin_id SERIAL PRIMARY KEY,    -- 관리자 ID (자동 증가)
                      name TEXT NOT NULL,             -- 이름
                      rank TEXT NOT NULL,             -- 계급
                      responsibility TEXT,            -- 책임
                      contact TEXT,                   -- 연락처
                      FOREIGN KEY (admin_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 유선반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS FieldWiremanSoldier (
                      field_wireman_id SERIAL PRIMARY KEY,  -- 유선반 ID (자동 증가)
                      name TEXT NOT NULL,                   -- 이름
                      rank TEXT NOT NULL,                   -- 계급
                      assigned_region TEXT,                 -- 배정 지역
                      phone_extension TEXT,                 -- 전화 내선
                      FOREIGN KEY (field_wireman_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 무선장비 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS WirelessEquipment (
                      equipment_id SERIAL PRIMARY KEY,  -- 장비 ID (자동 증가)
                      type TEXT NOT NULL,                -- 장비 유형
                      location TEXT,                     -- 장비 위치
                      operator_id INTEGER,               -- 운영자 ID
                      FOREIGN KEY (operator_id) REFERENCES PersonalInformation(soldier_id)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 무선반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS WirelessOperatorSoldier (
                      operator_id SERIAL PRIMARY KEY,    -- 운영자 ID (자동 증가)
                      name TEXT NOT NULL,                -- 이름
                      rank TEXT NOT NULL,                -- 계급
                      assigned_equipment_id INTEGER,     -- 배정된 장비 ID
                      contact TEXT,                      -- 연락처
                      FOREIGN KEY (operator_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (assigned_equipment_id) REFERENCES WirelessEquipment(equipment_id),  -- 외래키: WirelessEquipment 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 정보보호반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS CybersecuritySoldier (
                      cyber_security_soldier_id SERIAL PRIMARY KEY,  -- 정보보호반 병사 ID (자동 증가)
                      name TEXT NOT NULL,                           -- 이름
                      rank TEXT NOT NULL,                           -- 계급
                      specialty TEXT,                               -- 전문 분야
                      contact TEXT,                                 -- 연락처
                      FOREIGN KEY (cyber_security_soldier_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 전산장비반 병사 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS ComputerTechnician (
                      technician_id SERIAL PRIMARY KEY,  -- 전산장비반 ID (자동 증가)
                      name TEXT NOT NULL,                 -- 이름
                      rank TEXT NOT NULL,                 -- 계급
                      assigned_area TEXT NOT NULL,        -- 배정 지역
                      contact TEXT,                       -- 연락처
                      FOREIGN KEY (technician_id) REFERENCES PersonalInformation(soldier_id),  -- 외래키: PersonalInformation 테이블 참조
                      FOREIGN KEY (name) REFERENCES PersonalInformation(name)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 전화번호 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS PhoneDirectory (
                      phone_id SERIAL PRIMARY KEY,     -- 전화번호 ID (자동 증가)
                      region TEXT NOT NULL,            -- 지역
                      phone_number TEXT NOT NULL,      -- 전화번호
                      field_wireman_id INTEGER,       -- 유선반 ID
                      FOREIGN KEY (field_wireman_id) REFERENCES FieldWiremanSoldier(field_wireman_id)  -- 외래키: FieldWiremanSoldier 테이블 참조
                      )''')

    # 정보보호 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS Cybersecurity (
                      user_id SERIAL PRIMARY KEY,               -- 사용자 ID (자동 증가)
                      username TEXT NOT NULL,                   -- 사용자 이름
                      password_hash TEXT NOT NULL,              -- 비밀번호 해시
                      cyber_security_soldier_id INTEGER,       -- 정보보호반 병사 ID
                      FOREIGN KEY (cyber_security_soldier_id) REFERENCES CybersecuritySoldier(cyber_security_soldier_id)  -- 외래키: CybersecuritySoldier 테이블 참조
                      )''')

    # 전산장비 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS ComputerManagement (
                      computer_id SERIAL PRIMARY KEY,          -- 컴퓨터 ID (자동 증가)
                      ip_address TEXT NOT NULL,                -- IP 주소
                      registered_by INTEGER,                   -- 등록자 ID
                      FOREIGN KEY (registered_by) REFERENCES ComputerTechnician(technician_id)  -- 외래키: ComputerTechnician 테이블 참조
                      )''')

    # 권한 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS Permissions (
                      role_id SERIAL PRIMARY KEY,          -- 역할 ID (자동 증가)
                      role_name TEXT NOT NULL,             -- 역할 이름
                      permissions TEXT,                    -- 권한
                      soldier_id INTEGER,                  -- 병사 ID
                      FOREIGN KEY (soldier_id) REFERENCES PersonalInformation(soldier_id)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 로그 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS ActivityLog (
                      log_id SERIAL PRIMARY KEY,            -- 로그 ID (자동 증가)
                      timestamp TIMESTAMPTZ NOT NULL,      -- 타임스탬프
                      soldier_id INTEGER,                   -- 병사 ID
                      action TEXT NOT NULL,                 -- 행동
                      details TEXT NOT NULL,                -- 세부 사항
                      FOREIGN KEY (soldier_id) REFERENCES PersonalInformation(soldier_id)  -- 외래키: PersonalInformation 테이블 참조
                      )''')

    # 장비 이력 관리 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS EquipmentMaintenanceLog (
                      maintenance_id SERIAL PRIMARY KEY,   -- 유지보수 ID (자동 증가)
                      equipment_id INTEGER,                -- 장비 ID
                      operator_id INTEGER,                 -- 운영자 ID
                      maintenance_date DATE NOT NULL,      -- 유지보수 날짜
                      details TEXT NOT NULL,               -- 세부 사항
                      FOREIGN KEY (equipment_id) REFERENCES WirelessEquipment(equipment_id),  -- 외래키: WirelessEquipment 테이블 참조
                      FOREIGN KEY (operator_id) REFERENCES WirelessOperatorSoldier(operator_id)  -- 외래키: WirelessOperatorSoldier 테이블 참조
                      )''')

    # 접속 기록 테이블 생성
    cursor.execute('''CREATE TABLE IF NOT EXISTS AccessLog (
                      access_id SERIAL PRIMARY KEY,        -- 접속 ID (자동 증가)
                      user_id INTEGER,                     -- 사용자 ID
                      access_time TIMESTAMPTZ NOT NULL,   -- 접속 시간
                      computer_id INTEGER,                 -- 컴퓨터 ID
                      ip_address TEXT NOT NULL,            -- IP 주소
                      FOREIGN KEY (user_id) REFERENCES Cybersecurity(user_id),  -- 외래키: Cybersecurity 테이블 참조
                      FOREIGN KEY (computer_id) REFERENCES ComputerManagement(computer_id)  -- 외래키: ComputerManagement 테이블 참조
                      )''')

# 테이블 생성 함수 호출
create_tables()

# 데이터베이스 연결 종료
conn.commit()  # 변경사항 커밋
conn.close()   # 연결 종료




이 코드는 PostgreSQL 데이터베이스에 여러 개의 테이블을 생성하는 Python 스크립트입니다. 주요 구성 요소는 다음과 같습니다:

데이터베이스 연결: psycopg2 라이브러리를 사용하여 PostgreSQL 데이터베이스에 연결합니다. 데이터베이스 이름, 사용자 이름, 비밀번호, 호스트 주소, 포트 번호를 지정합니다.

커서 생성: SQL 명령을 실행하기 위해 커서를 생성합니다.

테이블 생성 함수: create_tables 함수를 정의하여 다양한 테이블을 생성합니다. 각 테이블은 병사, 장비, 권한, 로그 등 관련 데이터를 저장하는 데 사용됩니다. 각 테이블에는 기본 키와 외래 키가 설정되어 있어 데이터 간의 관계를 정의합니다.

PersonalInformation: 병사 개인정보를 저장합니다.
AdminSoldier: 운영통제실 병사 정보를 저장합니다.
FieldWiremanSoldier: 유선반 병사 정보를 저장합니다.
WirelessEquipment: 무선 장비 정보를 저장합니다.
WirelessOperatorSoldier: 무선반 병사 정보를 저장합니다.
CybersecuritySoldier: 정보보호반 병사 정보를 저장합니다.
ComputerTechnician: 전산 장비반 병사 정보를 저장합니다.
PhoneDirectory: 전화번호 정보를 저장합니다.
Cybersecurity: 정보보호 관련 사용자 정보를 저장합니다.
ComputerManagement: 전산 장비 관리를 위한 테이블입니다.
Permissions: 권한 관련 정보를 저장합니다.
ActivityLog: 활동 로그 정보를 저장합니다.
EquipmentMaintenanceLog: 장비 유지보수 이력을 저장합니다.
AccessLog: 접속 기록 정보를 저장합니다.
함수 호출: create_tables 함수를 호출하여 위에서 정의한 모든 테이블을 데이터베이스에 생성합니다.

연결 종료: 데이터베이스에 대한 모든 변경사항을 커밋하고 연결을 종료합니다.

이 코드는 군 관련 데이터 관리 시스템의 기본적인 구조를 설정하는 데 유용합니다.

